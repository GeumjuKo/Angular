{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap'; // import { DOCUMENT } from '@angular/common';\n// import { get } from 'scriptjs';\n\nlet PostComponent = class PostComponent {\n  constructor(httpCaller, http, authService, modalService, renderer, scriptService) {\n    this.httpCaller = httpCaller;\n    this.http = http;\n    this.authService = authService;\n    this.modalService = modalService;\n    this.renderer = renderer;\n    this.scriptService = scriptService;\n    this.modal = false;\n    this.postNum = '';\n    this.category = '';\n    this.title = '';\n    this.writer = '';\n    this.date = '';\n    this.views = 0;\n    this.diagnosis = '';\n    this.contents = '';\n    this.categories = [{\n      id: 1,\n      category: \"Liver\"\n    }, {\n      id: 2,\n      category: \"Heart\"\n    }, {\n      id: 3,\n      category: \"Stomach\"\n    }];\n    this.editFileSource = [];\n    this.editFile = []; // this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n\n  ngOnInit() {\n    this.getPostList();\n    this.authService.currentUser().getUserData((err, data) => {\n      if (err) console.log(\"유저정보를 불러오는데 실패했습니다.\", err); // console.log(data)\n\n      this.userName = data.UserAttributes[3].Value;\n      this.userId = this.authService.currentUser().getUsername();\n    });\n  }\n\n  showHide(obj) {\n    if (obj.clicked == true) {\n      if (obj.text != '') this.editCommentText = obj.text;\n      obj.clicked = false;\n    } else obj.clicked = true;\n  }\n\n  getPostList() {\n    this.httpCaller.get('/post/list').subscribe({\n      next: data => {\n        this.postList = JSON.parse(data.body);\n        this.editFileSource = [];\n        console.log(this.postList);\n      },\n      error: error => {\n        console.error('There was an error!', error);\n      }\n    });\n  }\n\n  editPost(post) {\n    console.log(post);\n\n    if (post.user.name == this.userName && post.user.id == this.userId) {\n      //수정 가능\n      // let comment_id = comment.comment_id;\\\n      console.log(this.editCategory, this.editDiagnosis, this.editTitle, this.editDescription);\n      let postdct = {\n        post_id: post.post_id,\n        diagnosis: this.editDiagnosis,\n        category: this.editCategory,\n        description: this.editDescription,\n        title: this.editTitle,\n        file_source: this.editFileSource\n      };\n      console.log(postdct);\n      this.http.put('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post', postdct).subscribe(res => {\n        console.log(res);\n        this.editFileSource = [];\n        this.getPostList();\n      });\n    }\n  }\n\n  deletePost(post) {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      body: {\n        \"post_id\": post.post_id\n      }\n    };\n\n    if (this.confirmWindow('게시물을 삭제하시겠습니까?') == true) {\n      this.http.delete('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post', options).subscribe(res => {\n        this.getPostList();\n      });\n    }\n  }\n\n  deleteComment(cmt_id) {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      body: {\n        \"comment_id\": cmt_id\n      }\n    };\n\n    if (this.confirmWindow('댓글을 삭제하시겠습니까?') == true) {\n      this.http.delete('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post/comment', options).subscribe(res => {\n        this.getPostList();\n      });\n    }\n  }\n\n  editComment(comment) {\n    let cmt_id = comment[0]; // let comment_id = comment.comment_id;\n\n    let cmt = {\n      text: this.editCommentText\n    };\n    let update_cmt = {\n      \"comment_id\": cmt_id,\n      \"comment\": cmt\n    };\n    this.http.put('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post/comment', update_cmt).subscribe(res => {\n      console.log(update_cmt); // console.log(res);\n\n      this.editCommentText = '';\n      comment[1].editClicked = false;\n      this.getPostList();\n    }); // console.log('after', (<HTMLTextAreaElement> document.getElementById('edit_txt')).value)\n  }\n\n  thumbsupdownComment(comment, flag) {\n    let cmt_id = comment[0];\n    let cmt;\n\n    if (flag == 1) {\n      if (this.confirmWindow('댓글을 추천하시겠습니까?') == true) cmt = {\n        like: true,\n        dislike: false\n      };\n    } else {\n      if (this.confirmWindow('댓글을 반대하시겠습니까?') == true) cmt = {\n        like: false,\n        dislike: true\n      };\n    }\n\n    let update_cmt = {\n      \"comment_id\": cmt_id,\n      \"comment\": cmt\n    };\n    console.log(update_cmt);\n    this.http.put('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post/comment/likedislike', update_cmt).subscribe(res => {\n      console.log(res);\n      this.getPostList();\n    });\n  }\n\n  getPostInfo(post) {\n    post.edited = true;\n    this.editCategory = post.category;\n    this.editTitle = post.title;\n    this.editDiagnosis = post.diagnosis;\n    this.editDescription = post.description;\n    console.log('getPostInfo', post.file_source);\n\n    for (let fileSource of post.file_source) {\n      this.editFileSource.push(fileSource);\n    }\n  }\n\n  readURL(event) {\n    if (event.target.files && event.target.files.length) {\n      const fileList = event.target.files;\n\n      for (const file of fileList) {\n        this.readImage(file);\n      }\n    }\n  }\n\n  readImage(file) {\n    console.log(file);\n\n    if (file.type && !file.type.startsWith('image/')) {\n      console.log('File is not an image.', file.type, file);\n      return;\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      this.editFileSource.push(reader.result);\n    };\n\n    reader.addEventListener('progress', event => {\n      if (event.loaded && event.total) {\n        const percent = event.loaded / event.total * 100;\n        console.log(`Progress: ${Math.round(percent)}`);\n      }\n    });\n    reader.readAsDataURL(file);\n  }\n\n  deleteImg(imgSrc) {\n    console.log(this.editFileSource);\n\n    for (const [i, value] of this.editFileSource.entries()) {\n      if (value == imgSrc) {\n        this.editFileSource.splice(i, 1);\n      }\n    }\n  }\n\n  confirmWindow(str) {\n    let ans = confirm(str);\n    return ans;\n  }\n\n  postComment(post) {\n    let txt = document.getElementById('comment_txt');\n    let today = new Date();\n    let cmt = {\n      text: txt.value,\n      write_time: today.toLocaleDateString(),\n      dislike: 0,\n      like: 0,\n      editClicked: false,\n      user: {\n        id: this.userId,\n        name: this.userName\n      }\n    };\n    let comment = {\n      \"post_id\": post.post_id,\n      comment: cmt\n    };\n    this.http.post('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post/comment', comment).subscribe(res => {\n      console.log(res);\n      txt.value = '';\n      post.isComment = false; //  window.location.reload(); 전체 새로고침\n      // this.router.navigate(['/post']); post component로 이동해버림\n      // this.ngOnInit(); 좋지 않은 방법\n\n      this.getPostList();\n    });\n  }\n\n  loadScript() {\n    console.log('preparing to laod');\n    const scriptElement = this.scriptService.loadJsScript(this.renderer, '../assets/MyWebApp.js');\n\n    scriptElement.onload = () => {\n      console.log('laodScript - onload');\n    }; // let node = document.createElement('script')\n    // node.src = '../dist/MyWebApp.js'\n    // node.type='text/javascript'\n    // node.async= true;\n    // document.getElementsByTagName('head')[0].appendChild(node)\n\n  } // loadAPI: Promise<any>;\n\n\n  open(content) {\n    //   this.loadAPI = new Promise((resolve) => {\n    //     console.log('resolving promise...');\n    //     this.loadScript();\n    // });\n    this.loadScript();\n    /* modal 창 open */\n\n    this.modalService.open(content, {\n      ariaLabelledBy: 'modal-basic-title'\n    }).result.then(result => {\n      this.closeResult = `Closed with: ${result}`;\n    }, reason => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  getDismissReason(reason) {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n};\nPostComponent = __decorate([Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})], PostComponent);\nexport { PostComponent };","map":{"version":3,"sources":["/Users/Desktop/Desktop/Angular/project-m-web/src/app/post/post.component.ts"],"names":["__decorate","Component","HttpHeaders","ModalDismissReasons","PostComponent","constructor","httpCaller","http","authService","modalService","renderer","scriptService","modal","postNum","category","title","writer","date","views","diagnosis","contents","categories","id","editFileSource","editFile","ngOnInit","getPostList","currentUser","getUserData","err","data","console","log","userName","UserAttributes","Value","userId","getUsername","showHide","obj","clicked","text","editCommentText","get","subscribe","next","postList","JSON","parse","body","error","editPost","post","user","name","editCategory","editDiagnosis","editTitle","editDescription","postdct","post_id","description","file_source","put","res","deletePost","options","headers","confirmWindow","delete","deleteComment","cmt_id","editComment","comment","cmt","update_cmt","editClicked","thumbsupdownComment","flag","like","dislike","getPostInfo","edited","fileSource","push","readURL","event","target","files","length","fileList","file","readImage","type","startsWith","reader","FileReader","onload","result","addEventListener","loaded","total","percent","Math","round","readAsDataURL","deleteImg","imgSrc","i","value","entries","splice","str","ans","confirm","postComment","txt","document","getElementById","today","Date","write_time","toLocaleDateString","isComment","loadScript","scriptElement","loadJsScript","open","content","ariaLabelledBy","then","closeResult","reason","getDismissReason","ESC","BACKDROP_CLICK","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n// import { DOCUMENT } from '@angular/common';\n// import { get } from 'scriptjs';\nlet PostComponent = class PostComponent {\n    constructor(httpCaller, http, authService, modalService, renderer, scriptService) {\n        this.httpCaller = httpCaller;\n        this.http = http;\n        this.authService = authService;\n        this.modalService = modalService;\n        this.renderer = renderer;\n        this.scriptService = scriptService;\n        this.modal = false;\n        this.postNum = '';\n        this.category = '';\n        this.title = '';\n        this.writer = '';\n        this.date = '';\n        this.views = 0;\n        this.diagnosis = '';\n        this.contents = '';\n        this.categories = [\n            { id: 1, category: \"Liver\" },\n            { id: 2, category: \"Heart\" },\n            { id: 3, category: \"Stomach\" }\n        ];\n        this.editFileSource = [];\n        this.editFile = [];\n        // this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n    }\n    ngOnInit() {\n        this.getPostList();\n        this.authService.currentUser().getUserData((err, data) => {\n            if (err)\n                console.log(\"유저정보를 불러오는데 실패했습니다.\", err);\n            // console.log(data)\n            this.userName = data.UserAttributes[3].Value;\n            this.userId = this.authService.currentUser().getUsername();\n        });\n    }\n    ;\n    showHide(obj) {\n        if (obj.clicked == true) {\n            if (obj.text != '')\n                this.editCommentText = obj.text;\n            obj.clicked = false;\n        }\n        else\n            obj.clicked = true;\n    }\n    getPostList() {\n        this.httpCaller.get('/post/list').subscribe({\n            next: data => {\n                this.postList = JSON.parse(data.body);\n                this.editFileSource = [];\n                console.log(this.postList);\n            },\n            error: error => {\n                console.error('There was an error!', error);\n            }\n        });\n    }\n    editPost(post) {\n        console.log(post);\n        if (post.user.name == this.userName && post.user.id == this.userId) {\n            //수정 가능\n            // let comment_id = comment.comment_id;\\\n            console.log(this.editCategory, this.editDiagnosis, this.editTitle, this.editDescription);\n            let postdct = {\n                post_id: post.post_id,\n                diagnosis: this.editDiagnosis,\n                category: this.editCategory,\n                description: this.editDescription,\n                title: this.editTitle,\n                file_source: this.editFileSource,\n            };\n            console.log(postdct);\n            this.http.put('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post', postdct)\n                .subscribe(res => {\n                console.log(res);\n                this.editFileSource = [];\n                this.getPostList();\n            });\n        }\n    }\n    deletePost(post) {\n        const options = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n            }),\n            body: {\n                \"post_id\": post.post_id\n            },\n        };\n        if (this.confirmWindow('게시물을 삭제하시겠습니까?') == true) {\n            this.http.delete('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post', options)\n                .subscribe(res => {\n                this.getPostList();\n            });\n        }\n    }\n    deleteComment(cmt_id) {\n        const options = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n            }),\n            body: {\n                \"comment_id\": cmt_id\n            },\n        };\n        if (this.confirmWindow('댓글을 삭제하시겠습니까?') == true) {\n            this.http.delete('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post/comment', options)\n                .subscribe(res => {\n                this.getPostList();\n            });\n        }\n    }\n    editComment(comment) {\n        let cmt_id = comment[0];\n        // let comment_id = comment.comment_id;\n        let cmt = {\n            text: this.editCommentText\n        };\n        let update_cmt = { \"comment_id\": cmt_id, \"comment\": cmt };\n        this.http.put('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post/comment', update_cmt)\n            .subscribe(res => {\n            console.log(update_cmt);\n            // console.log(res);\n            this.editCommentText = '';\n            comment[1].editClicked = false;\n            this.getPostList();\n        });\n        // console.log('after', (<HTMLTextAreaElement> document.getElementById('edit_txt')).value)\n    }\n    thumbsupdownComment(comment, flag) {\n        let cmt_id = comment[0];\n        let cmt;\n        if (flag == 1) {\n            if (this.confirmWindow('댓글을 추천하시겠습니까?') == true)\n                cmt = { like: true, dislike: false };\n        }\n        else {\n            if (this.confirmWindow('댓글을 반대하시겠습니까?') == true)\n                cmt = { like: false, dislike: true };\n        }\n        let update_cmt = { \"comment_id\": cmt_id, \"comment\": cmt };\n        console.log(update_cmt);\n        this.http.put('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post/comment/likedislike', update_cmt)\n            .subscribe(res => {\n            console.log(res);\n            this.getPostList();\n        });\n    }\n    getPostInfo(post) {\n        post.edited = true;\n        this.editCategory = post.category;\n        this.editTitle = post.title;\n        this.editDiagnosis = post.diagnosis;\n        this.editDescription = post.description;\n        console.log('getPostInfo', post.file_source);\n        for (let fileSource of post.file_source) {\n            this.editFileSource.push(fileSource);\n        }\n    }\n    readURL(event) {\n        if (event.target.files && event.target.files.length) {\n            const fileList = event.target.files;\n            for (const file of fileList) {\n                this.readImage(file);\n            }\n        }\n    }\n    readImage(file) {\n        console.log(file);\n        if (file.type && !file.type.startsWith('image/')) {\n            console.log('File is not an image.', file.type, file);\n            return;\n        }\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.editFileSource.push(reader.result);\n        };\n        reader.addEventListener('progress', (event) => {\n            if (event.loaded && event.total) {\n                const percent = (event.loaded / event.total) * 100;\n                console.log(`Progress: ${Math.round(percent)}`);\n            }\n        });\n        reader.readAsDataURL(file);\n    }\n    deleteImg(imgSrc) {\n        console.log(this.editFileSource);\n        for (const [i, value] of this.editFileSource.entries()) {\n            if (value == imgSrc) {\n                this.editFileSource.splice(i, 1);\n            }\n        }\n    }\n    confirmWindow(str) {\n        let ans = confirm(str);\n        return ans;\n    }\n    postComment(post) {\n        let txt = document.getElementById('comment_txt');\n        let today = new Date();\n        let cmt = {\n            text: txt.value,\n            write_time: today.toLocaleDateString(),\n            dislike: 0,\n            like: 0,\n            editClicked: false,\n            user: {\n                id: this.userId,\n                name: this.userName\n            }\n        };\n        let comment = { \"post_id\": post.post_id, comment: cmt };\n        this.http.post('https://ssokuycqjh.execute-api.ap-northeast-2.amazonaws.com/post/comment', comment)\n            .subscribe(res => {\n            console.log(res);\n            txt.value = '';\n            post.isComment = false;\n            //  window.location.reload(); 전체 새로고침\n            // this.router.navigate(['/post']); post component로 이동해버림\n            // this.ngOnInit(); 좋지 않은 방법\n            this.getPostList();\n        });\n    }\n    loadScript() {\n        console.log('preparing to laod');\n        const scriptElement = this.scriptService.loadJsScript(this.renderer, '../assets/MyWebApp.js');\n        scriptElement.onload = () => {\n            console.log('laodScript - onload');\n        };\n        // let node = document.createElement('script')\n        // node.src = '../dist/MyWebApp.js'\n        // node.type='text/javascript'\n        // node.async= true;\n        // document.getElementsByTagName('head')[0].appendChild(node)\n    }\n    // loadAPI: Promise<any>;\n    open(content) {\n        //   this.loadAPI = new Promise((resolve) => {\n        //     console.log('resolving promise...');\n        //     this.loadScript();\n        // });\n        this.loadScript();\n        /* modal 창 open */\n        this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n            this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n    getDismissReason(reason) {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        }\n        else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        }\n        else {\n            return `with: ${reason}`;\n        }\n    }\n};\nPostComponent = __decorate([\n    Component({\n        selector: 'app-post',\n        templateUrl: './post.component.html',\n        styleUrls: ['./post.component.css']\n    })\n], PostComponent);\nexport { PostComponent };\n"]},"metadata":{},"sourceType":"module"}